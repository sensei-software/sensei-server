#!/bin/bash

#? Sensei DB Import
#? ======================
#? Imports the log files into the Database

# Base
. ${0%/*}/../res/base/sensei.base

# MySQL Connection
if [[ -z "$SENSEI_DB_PASS" ]]; then
	PASS_ARG=""
else
	PASS_ARG="-p$SENSEI_DB_PASS"
fi
exec 5> >(mysql -D $SENSEI_DB_NAME -u $SENSEI_DB_NAME $PASS_ARG)


while true; do
	echo "# DbSync - Purging not valid values..."
	cat $RES_DIR/db/run/purge_invalid.sql >&5
	echo "# DbSync - Cleaning old values...."
	cat $RES_DIR/db/run/purge_old.sql >&5
	echo "# DbSync - Updating calendar table for seconds...."
	echo "CALL fill_calendar_s(ADDDATE(NOW(), INTERVAL -120 SECOND), NOW()); " >&5
	echo "# DbSync - Updating calendar table for minutes...."
	echo "CALL fill_calendar_m(ADDDATE(NOW(), INTERVAL -5 MINUTE), NOW());" >&5
	echo "# DbSync - Updating calendar table for hours...."
	echo "CALL fill_calendar_h(ADDDATE(NOW(), INTERVAL - 2 HOUR), NOW());" >&5
	echo "# DbSync - Updating calendar table for days...."
	echo "CALL fill_calendar_d(ADDDATE(NOW(), INTERVAL - 2 DAY), NOW());"  >&5
	echo "# DbSync - Aggregating sensor_values_m...."
	echo "INSERT IGNORE INTO sensors_values_m(DateField,SensorName,Measure,Unit,Value) SELECT FLOOR(DateField/100)*100, SensorName, Measure, Unit, AVG(Value) FROM sensors_values WHERE  DateField>((NOW( ) - INTERVAL 3 MINUTE)+0) AND  DateField<((NOW( ) - INTERVAL 1 MINUTE)+0)  GROUP BY FLOOR(DateField/100)*100 , SensorName, Measure, Unit ;" >&5
	echo "# DbSync - Aggregating sensor_values_h...."
	echo "INSERT IGNORE INTO sensors_values_h(DateField,SensorName,Measure,Unit,Value) SELECT FLOOR(DateField/10000)*10000, SensorName, Measure, Unit, AVG(Value) FROM sensors_values_m WHERE  DateField>((NOW( ) - INTERVAL 3 HOUR)+0) AND  DateField<((NOW( ) - INTERVAL 1 HOUR)+0)  GROUP BY FLOOR(DateField/10000)*10000 , SensorName, Measure, Unit ;" >&5

	echo "# DbSync - Waiting...."
	sleep  $SENSEI_DB_SYNC_INTERVAL
done

#Close MySQL conenction
exec 5<&-
