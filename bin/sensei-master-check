#!/bin/bash

#? Sensei Master Check
#? ======================
#? > sensei-master-check [<PORT>]
#? 	This script check if Sensei Master is running for the device on <PORT>.
#? 	Check is done by checking if process is running (by process name "sensei-master")
#? 		<PORT> is given as the first argument. If omitted PORT_DEFAULT is used.
#? 	NOTE: ps filtering should be improved: it could occasionally produce false positives

# Base
. ${0%/*}/../res/base/sensei.base

# Arguments parsing
. $INC_DIR/port.parsing.inc "$1"

# Main
echo "# Checking port: $PORT ($DEV_NAME)"
pid=$($DIR/sensei-ps "sensei-master $PORT" -p | head -1)
if [ -z "$pid" ]; then
	echo -e "# SenseiMaster NOT RUNNING for $PORT" >&2
	exit 1
else
	echo -e "# SenseiMaster ALIVE for $PORT = PID: $pid"

	# Checking frozen
	if [[ $2 != "-nf" ]]; then
		last_line=$(tail -n 1 $XDIR/sensei_commands.log )
		last_val=$( echo "$last_line" | cut -d '=' -f 3 | tr -d " :blank:\n\r")
		last_val_d=$( echo "$last_line" | cut -d '=' -f 1 | sed s/\s$// )
		#echo -e $last_line
		if date -d "$last_val_d" >/dev/null; then last_val_s=$(date -d "$last_val_d" '+%s'); else last_val_s="$last_val_s"; fi
		now_s=$(date '+%s')
		elapsed=$(( $now_s-$last_val_s ))

		echo "# Last entry for $PORT: $elapsed s ago"
		if [ $elapsed -ge $SENSEI_MASTER_FROZEN_TIME ]; then
			echo -e "# SenseiMaster FROZEN for $PORT" >&2
			exit 2
		fi
	fi
		exit 0
fi
